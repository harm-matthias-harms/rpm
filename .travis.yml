sudo: false
branches:
  only:
  - master
  - develop
stages:
  - test
  - name: build
    if: ( branch = master OR branch = develop OR tag IS present ) AND type != pull_request
jobs:
  include:
    - stage: test
      language: go
      go: 1.12.x
      env:
        - GO111MODULE=on
      services:
        - mongodb
      before_install:
        - cd backend/
      install:
        - go mod download
      script:
        - go test -coverprofile=coverage.txt -covermode=atomic ./...
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - stage: test
      language: node_js
      node_js: 12
      addons:
        apt:
          packages:
            # Ubuntu 16+ does not install this dependency by default, so we need to install it ourselves
            - libgconf-2-4
      cache:
        # Caches node_modules in all other cases
        yarn: true
        directories:
          # we also need to cache folder with Cypress binary
          - ~/.cache
          - frontend/node_modules
      before_install:
        - cd frontend/
      install:
        - yarn install
        - yarn run build # for cypress
        - yarn run start & # for cypress
      script:
        - yarn run lint
        - yarn run test
        - yarn run test:e2e
        - kill $(jobs -p) || true # for cypress
      after_success:
        - ./node_modules/.bin/codecov
    - stage: build
      language: generic
      services:
        - docker
      before_install:
        - cd backend/
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      before_script:
        - TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "stable"; else if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "latest"; else echo $TRAVIS_TAG; fi ; fi`
      script:
        - docker build -t $IMAGE_BACKEND:$TAG .
      after_success:
        - docker push $IMAGE_BACKEND:$TAG
    - stage: build
      language: generic
      services:
        - docker
      before_install:
        - cd frontend/
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      before_script:
        - TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "stable"; else if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "latest"; else echo $TRAVIS_TAG; fi ; fi`
      script:
        - docker build -t $IMAGE_FRONTEND:$TAG .
      after_success:
        - docker push $IMAGE_FRONTEND:$TAG
